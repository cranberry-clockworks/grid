apiVersion: v1
kind: PersistentVolume
metadata:
  name: volume
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /tmp/
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-volume-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-broker
data:
  ALLOW_PLAINTEXT_LISTENER: "yes"
  KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "false"
  KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://queue:9092"
---
apiVersion: v1
kind: Service
metadata:
  name: queue
spec:
  selector:
    app: kafka
  ports:
  - port: 9092
    targetPort: 9092
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: kafka-volume-claim
      containers:
      - name: kafka
        image: bitnami/kafka:3.4
        resources:
          requests:
            memory: 512Mi
            cpu: 100m
          limits:
            memory: 4Gi
            cpu: 1
        ports:
        - containerPort: 9092
        envFrom:
        - configMapRef:
            name: kafka-broker
        volumeMounts:
          - name: storage
            mountPath: "/bitnami/kafka"
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kafka-topic-creator
spec:
  ttlSecondsAfterFinished: 30
  template:
    spec:
      containers:
      - name: kafka
        image: bitnami/kafka:3.4
        resources:
          limits:
            memory: "128Mi"
            cpu: "100m"
        command: ["/bin/sh", "-c"]
        args: 
        - |
          echo "Waiting for the broker $(BROKER)"
          kafka-topics.sh --bootstrap-server $(BROKER) --list
          for topic in $(TOPICS)
          do    
              echo "Creating topic: $topic"
              kafka-topics.sh --bootstrap-server $(BROKER) --create --if-not-exists --topic "$topic" --partitions 50
          done
          echo "Current topics:"
          kafka-topics.sh --bootstrap-server $(BROKER) --list
        env:
        - name: BROKER
          value: queue:9092
        - name: TOPICS
          value: "healthcheck tasks results"
      restartPolicy: Never
  backoffLimit: 0


